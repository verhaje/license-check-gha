<?xml version="1.0" encoding="utf-8" standalone="no"?>
<test-results xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="nunit_schema_2.5.xsd" name="Pester" total="10" errors="0" failures="1" not-run="0" inconclusive="0" ignored="0" skipped="0" invalid="0" date="2025-06-25" time="15:58:11">
  <environment clr-version="9.0.4" cwd="C:\Users\verhaje\license-check-gha" user-domain="ICONOS" machine-name="BCVFSQ3" user="verhaje" os-version="10.0.19045" platform="Microsoft Windows 10 Pro|C:\windows|\Device\Harddisk0\Partition3" nunit-version="2.5.8.0" />
  <culture-info current-culture="nl-BE" current-uiculture="en-US" />
  <test-suite type="TestFixture" name="Pester" executed="True" result="Failure" success="False" time="0.2509" asserts="0" description="Pester">
    <results>
      <test-suite type="TestFixture" name="C:\Users\verhaje\license-check-gha\.github\actions\nuget-licenses\functions.Tests.ps1" executed="True" result="Failure" success="False" time="0.2509" asserts="0" description="C:\Users\verhaje\license-check-gha\.github\actions\nuget-licenses\functions.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="IsAllowedPackage" executed="True" result="Failure" success="False" time="0.0958" asserts="0" description="IsAllowedPackage">
            <results>
              <test-suite type="TestFixture" name="IsAllowedPackage.Allowed Packages" executed="True" result="Success" success="True" time="0.0447" asserts="0" description="IsAllowedPackage.Allowed Packages">
                <results>
                  <test-case description="Returns True for a package within allowed version range" name="IsAllowedPackage.Allowed Packages.Returns True for a package within allowed version range" time="0.0136" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Returns True for a package within allowed version range and only minVersion" name="IsAllowedPackage.Allowed Packages.Returns True for a package within allowed version range and only minVersion" time="0.0053" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Returns True for a package within allowed version range and only minVersion" name="IsAllowedPackage.Allowed Packages.Returns True for a package within allowed version range and only minVersion" time="0.0053" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Returns False for a package below allowed version range" name="IsAllowedPackage.Allowed Packages.Returns False for a package below allowed version range" time="0.004" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Returns True for a package when no range is defined" name="IsAllowedPackage.Allowed Packages.Returns True for a package when no range is defined" time="0.0038" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Returns False for a package above allowed version range" name="IsAllowedPackage.Allowed Packages.Returns False for a package above allowed version range" time="0.0038" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="IsAllowedPackage.Disallowed Packages" executed="True" result="Success" success="True" time="0.0697" asserts="0" description="IsAllowedPackage.Disallowed Packages">
                <results>
                  <test-case description="Returns True for a package within disallowed version range" name="IsAllowedPackage.Disallowed Packages.Returns True for a package within disallowed version range" time="0.0063" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Returns True for a package when no range is defined" name="IsAllowedPackage.Disallowed Packages.Returns True for a package when no range is defined" time="0.0066" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Returns False for a package outside disallowed version range" name="IsAllowedPackage.Disallowed Packages.Returns False for a package outside disallowed version range" time="0.0037" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="IsAllowedPackage.Unlisted Packages" executed="True" result="Failure" success="False" time="0.0882" asserts="0" description="IsAllowedPackage.Unlisted Packages">
                <results>
                  <test-case description="Returns False for a package not listed in allowed packages" name="IsAllowedPackage.Unlisted Packages.Returns False for a package not listed in allowed packages" time="0.0108" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected $false, but got $true.</message>
                      <stack-trace>at $result | Should -Be $false, C:\Users\verhaje\license-check-gha\.github\actions\nuget-licenses\functions.Tests.ps1:125
at &lt;ScriptBlock&gt;, C:\Users\verhaje\license-check-gha\.github\actions\nuget-licenses\functions.Tests.ps1:125</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
    </results>
  </test-suite>
</test-results>